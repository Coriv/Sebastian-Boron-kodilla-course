<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.kodilla.hibernate.manytomany.dao.CompanyDaoTestSuite" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-09-20T17:15:29" hostname="MBP-Sebastian.home" time="0.189">
  <properties/>
  <testcase name="testSaveManyToMany()" classname="com.kodilla.hibernate.manytomany.dao.CompanyDaoTestSuite" time="0.189"/>
  <system-out><![CDATA[19:15:27.725 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
19:15:27.731 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
19:15:27.748 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.kodilla.hibernate.manytomany.dao.CompanyDaoTestSuite] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
19:15:27.754 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.kodilla.hibernate.manytomany.dao.CompanyDaoTestSuite], using SpringBootContextLoader
19:15:27.756 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.kodilla.hibernate.manytomany.dao.CompanyDaoTestSuite]: class path resource [com/kodilla/hibernate/manytomany/dao/CompanyDaoTestSuite-context.xml] does not exist
19:15:27.756 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.kodilla.hibernate.manytomany.dao.CompanyDaoTestSuite]: class path resource [com/kodilla/hibernate/manytomany/dao/CompanyDaoTestSuiteContext.groovy] does not exist
19:15:27.756 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.kodilla.hibernate.manytomany.dao.CompanyDaoTestSuite]: no resource found for suffixes {-context.xml, Context.groovy}.
19:15:27.757 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.kodilla.hibernate.manytomany.dao.CompanyDaoTestSuite]: CompanyDaoTestSuite does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
19:15:27.773 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.kodilla.hibernate.manytomany.dao.CompanyDaoTestSuite]
19:15:27.807 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/Users/sebastianboron/Sebastian-Boron-kodilla-java-course/kodilla-hibernate/build/classes/java/main/com/kodilla/hibernate/KodillaHibernateApplication.class]
19:15:27.809 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.kodilla.hibernate.KodillaHibernateApplication for test class com.kodilla.hibernate.manytomany.dao.CompanyDaoTestSuite
19:15:27.846 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.kodilla.hibernate.manytomany.dao.CompanyDaoTestSuite]: using defaults.
19:15:27.846 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
19:15:27.851 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
19:15:27.855 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@71b3bc45, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@a8c1f44, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@150ab4ed, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3c435123, org.springframework.test.context.support.DirtiesContextTestExecutionListener@50fe837a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3a62c01e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7a8fa663, org.springframework.test.context.event.EventPublishingTestExecutionListener@5ce33a58, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@78a287ed, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@546ccad7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5357c287, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1623134f, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7a527389, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@485a3466]
19:15:27.857 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@4f071df8 testClass = CompanyDaoTestSuite, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4de41af9 testClass = CompanyDaoTestSuite, locations = '{}', classes = '{class com.kodilla.hibernate.KodillaHibernateApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1e8b7643, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1984b1f, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6d167f58, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@19c65cdc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@70f02c32, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@399c4be1], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
19:15:27.867 [Test worker] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4f071df8 testClass = CompanyDaoTestSuite, testInstance = com.kodilla.hibernate.manytomany.dao.CompanyDaoTestSuite@4c51bb7, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4de41af9 testClass = CompanyDaoTestSuite, locations = '{}', classes = '{class com.kodilla.hibernate.KodillaHibernateApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1e8b7643, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1984b1f, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6d167f58, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@19c65cdc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@70f02c32, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@399c4be1], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.7.3)

2022-09-20 19:15:28.015  INFO 1720 --- [    Test worker] c.k.h.m.dao.CompanyDaoTestSuite          : Starting CompanyDaoTestSuite using Java 17.0.3 on MBP-Sebastian.home with PID 1720 (started by sebastianboron in /Users/sebastianboron/Sebastian-Boron-kodilla-java-course/kodilla-hibernate)
2022-09-20 19:15:28.016  INFO 1720 --- [    Test worker] c.k.h.m.dao.CompanyDaoTestSuite          : No active profile set, falling back to 1 default profile: "default"
2022-09-20 19:15:28.216  INFO 1720 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-20 19:15:28.217  INFO 1720 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2022-09-20 19:15:28.239  INFO 1720 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.kodilla.hibernate.invoice.dao.InvoiceDao; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2022-09-20 19:15:28.240  INFO 1720 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.kodilla.hibernate.invoice.dao.ItemDao; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2022-09-20 19:15:28.240  INFO 1720 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.kodilla.hibernate.invoice.dao.ProductDao; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2022-09-20 19:15:28.242  INFO 1720 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.kodilla.hibernate.manytomany.dao.CompanyDao; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2022-09-20 19:15:28.245  INFO 1720 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.kodilla.hibernate.manytomany.dao.EmployeeDao; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2022-09-20 19:15:28.248  INFO 1720 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.kodilla.hibernate.task.dao.TaskDao; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2022-09-20 19:15:28.250  INFO 1720 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.kodilla.hibernate.task.dao.TaskFinancialDetailsDao; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2022-09-20 19:15:28.253  INFO 1720 --- [    Test worker] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.kodilla.hibernate.tasklist.dao.TaskListDao; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2022-09-20 19:15:28.254  INFO 1720 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30 ms. Found 0 JDBC repository interfaces.
2022-09-20 19:15:28.269  INFO 1720 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2022-09-20 19:15:28.269  INFO 1720 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-09-20 19:15:28.299  INFO 1720 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 24 ms. Found 8 JPA repository interfaces.
2022-09-20 19:15:28.532  INFO 1720 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-09-20 19:15:28.561  INFO 1720 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-09-20 19:15:28.652  INFO 1720 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-09-20 19:15:28.711  INFO 1720 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-09-20 19:15:28.819  INFO 1720 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-09-20 19:15:28.828  INFO 1720 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL57Dialect
2022-09-20 19:15:29.225  INFO 1720 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-09-20 19:15:29.269  INFO 1720 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-09-20 19:15:29.755  INFO 1720 --- [    Test worker] c.k.h.m.dao.CompanyDaoTestSuite          : Started CompanyDaoTestSuite in 1.873 seconds (JVM running for 2.386)
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: select next_val as id_val from hibernate_sequence for update
Hibernate: update hibernate_sequence set next_val= ? where next_val=?
Hibernate: insert into companies (company_name, company_id) values (?, ?)
Hibernate: insert into employees (firstname, lastname, employee_id) values (?, ?, ?)
Hibernate: insert into companies (company_name, company_id) values (?, ?)
Hibernate: insert into employees (firstname, lastname, employee_id) values (?, ?, ?)
Hibernate: insert into companies (company_name, company_id) values (?, ?)
Hibernate: insert into employees (firstname, lastname, employee_id) values (?, ?, ?)
Hibernate: insert into join_company_employee (employee_id, company_id) values (?, ?)
Hibernate: insert into join_company_employee (employee_id, company_id) values (?, ?)
Hibernate: insert into join_company_employee (employee_id, company_id) values (?, ?)
Hibernate: insert into join_company_employee (employee_id, company_id) values (?, ?)
Hibernate: insert into join_company_employee (employee_id, company_id) values (?, ?)
Hibernate: select company0_.company_id as company_1_0_1_, company0_.company_name as company_2_0_1_, employees1_.company_id as company_2_4_3_, employee2_.employee_id as employee1_4_3_, employee2_.employee_id as employee1_1_0_, employee2_.firstname as firstnam2_1_0_, employee2_.lastname as lastname3_1_0_ from companies company0_ left outer join join_company_employee employees1_ on company0_.company_id=employees1_.company_id left outer join employees employee2_ on employees1_.employee_id=employee2_.employee_id where company0_.company_id=?
Hibernate: select companies0_.employee_id as employee1_4_0_, companies0_.company_id as company_2_4_0_, company1_.company_id as company_1_0_1_, company1_.company_name as company_2_0_1_ from join_company_employee companies0_ inner join companies company1_ on companies0_.company_id=company1_.company_id where companies0_.employee_id=?
Hibernate: select company0_.company_id as company_1_0_1_, company0_.company_name as company_2_0_1_, employees1_.company_id as company_2_4_3_, employee2_.employee_id as employee1_4_3_, employee2_.employee_id as employee1_1_0_, employee2_.firstname as firstnam2_1_0_, employee2_.lastname as lastname3_1_0_ from companies company0_ left outer join join_company_employee employees1_ on company0_.company_id=employees1_.company_id left outer join employees employee2_ on employees1_.employee_id=employee2_.employee_id where company0_.company_id=?
Hibernate: select company0_.company_id as company_1_0_1_, company0_.company_name as company_2_0_1_, employees1_.company_id as company_2_4_3_, employee2_.employee_id as employee1_4_3_, employee2_.employee_id as employee1_1_0_, employee2_.firstname as firstnam2_1_0_, employee2_.lastname as lastname3_1_0_ from companies company0_ left outer join join_company_employee employees1_ on company0_.company_id=employees1_.company_id left outer join employees employee2_ on employees1_.employee_id=employee2_.employee_id where company0_.company_id=?
Hibernate: select companies0_.employee_id as employee1_4_0_, companies0_.company_id as company_2_4_0_, company1_.company_id as company_1_0_1_, company1_.company_name as company_2_0_1_ from join_company_employee companies0_ inner join companies company1_ on companies0_.company_id=company1_.company_id where companies0_.employee_id=?
Hibernate: select companies0_.employee_id as employee1_4_0_, companies0_.company_id as company_2_4_0_, company1_.company_id as company_1_0_1_, company1_.company_name as company_2_0_1_ from join_company_employee companies0_ inner join companies company1_ on companies0_.company_id=company1_.company_id where companies0_.employee_id=?
Hibernate: select company0_.company_id as company_1_0_1_, company0_.company_name as company_2_0_1_, employees1_.company_id as company_2_4_3_, employee2_.employee_id as employee1_4_3_, employee2_.employee_id as employee1_1_0_, employee2_.firstname as firstnam2_1_0_, employee2_.lastname as lastname3_1_0_ from companies company0_ left outer join join_company_employee employees1_ on company0_.company_id=employees1_.company_id left outer join employees employee2_ on employees1_.employee_id=employee2_.employee_id where company0_.company_id=?
Hibernate: select company0_.company_id as company_1_0_1_, company0_.company_name as company_2_0_1_, employees1_.company_id as company_2_4_3_, employee2_.employee_id as employee1_4_3_, employee2_.employee_id as employee1_1_0_, employee2_.firstname as firstnam2_1_0_, employee2_.lastname as lastname3_1_0_ from companies company0_ left outer join join_company_employee employees1_ on company0_.company_id=employees1_.company_id left outer join employees employee2_ on employees1_.employee_id=employee2_.employee_id where company0_.company_id=?
Hibernate: select companies0_.employee_id as employee1_4_0_, companies0_.company_id as company_2_4_0_, company1_.company_id as company_1_0_1_, company1_.company_name as company_2_0_1_ from join_company_employee companies0_ inner join companies company1_ on companies0_.company_id=company1_.company_id where companies0_.employee_id=?
Hibernate: select company0_.company_id as company_1_0_1_, company0_.company_name as company_2_0_1_, employees1_.company_id as company_2_4_3_, employee2_.employee_id as employee1_4_3_, employee2_.employee_id as employee1_1_0_, employee2_.firstname as firstnam2_1_0_, employee2_.lastname as lastname3_1_0_ from companies company0_ left outer join join_company_employee employees1_ on company0_.company_id=employees1_.company_id left outer join employees employee2_ on employees1_.employee_id=employee2_.employee_id where company0_.company_id=?
Hibernate: select companies0_.employee_id as employee1_4_0_, companies0_.company_id as company_2_4_0_, company1_.company_id as company_1_0_1_, company1_.company_name as company_2_0_1_ from join_company_employee companies0_ inner join companies company1_ on companies0_.company_id=company1_.company_id where companies0_.employee_id=?
Hibernate: select companies0_.employee_id as employee1_4_0_, companies0_.company_id as company_2_4_0_, company1_.company_id as company_1_0_1_, company1_.company_name as company_2_0_1_ from join_company_employee companies0_ inner join companies company1_ on companies0_.company_id=company1_.company_id where companies0_.employee_id=?
Hibernate: SELECT * FROM COMPANIES WHERE COMPANY_NAME LIKE ?
Hibernate: select employee0_.employee_id as employee1_1_, employee0_.firstname as firstnam2_1_, employee0_.lastname as lastname3_1_ from employees employee0_ where employee0_.lastname=?
Hibernate: select company0_.company_id as company_1_0_0_, company0_.company_name as company_2_0_0_ from companies company0_ where company0_.company_id=?
Hibernate: select employees0_.company_id as company_2_4_0_, employees0_.employee_id as employee1_4_0_, employee1_.employee_id as employee1_1_1_, employee1_.firstname as firstnam2_1_1_, employee1_.lastname as lastname3_1_1_ from join_company_employee employees0_ inner join employees employee1_ on employees0_.employee_id=employee1_.employee_id where employees0_.company_id=?
Hibernate: select companies0_.employee_id as employee1_4_0_, companies0_.company_id as company_2_4_0_, company1_.company_id as company_1_0_1_, company1_.company_name as company_2_0_1_ from join_company_employee companies0_ inner join companies company1_ on companies0_.company_id=company1_.company_id where companies0_.employee_id=?
Hibernate: select employees0_.company_id as company_2_4_0_, employees0_.employee_id as employee1_4_0_, employee1_.employee_id as employee1_1_1_, employee1_.firstname as firstnam2_1_1_, employee1_.lastname as lastname3_1_1_ from join_company_employee employees0_ inner join employees employee1_ on employees0_.employee_id=employee1_.employee_id where employees0_.company_id=?
Hibernate: select companies0_.employee_id as employee1_4_0_, companies0_.company_id as company_2_4_0_, company1_.company_id as company_1_0_1_, company1_.company_name as company_2_0_1_ from join_company_employee companies0_ inner join companies company1_ on companies0_.company_id=company1_.company_id where companies0_.employee_id=?
Hibernate: select employees0_.company_id as company_2_4_0_, employees0_.employee_id as employee1_4_0_, employee1_.employee_id as employee1_1_1_, employee1_.firstname as firstnam2_1_1_, employee1_.lastname as lastname3_1_1_ from join_company_employee employees0_ inner join employees employee1_ on employees0_.employee_id=employee1_.employee_id where employees0_.company_id=?
Hibernate: select companies0_.employee_id as employee1_4_0_, companies0_.company_id as company_2_4_0_, company1_.company_id as company_1_0_1_, company1_.company_name as company_2_0_1_ from join_company_employee companies0_ inner join companies company1_ on companies0_.company_id=company1_.company_id where companies0_.employee_id=?
Hibernate: delete from join_company_employee where employee_id=?
Hibernate: delete from join_company_employee where employee_id=?
Hibernate: delete from join_company_employee where employee_id=?
Hibernate: delete from employees where employee_id=?
Hibernate: delete from companies where company_id=?
Hibernate: delete from employees where employee_id=?
Hibernate: delete from companies where company_id=?
Hibernate: delete from employees where employee_id=?
Hibernate: delete from companies where company_id=?
Hibernate: select company0_.company_id as company_1_0_0_, company0_.company_name as company_2_0_0_ from companies company0_ where company0_.company_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
